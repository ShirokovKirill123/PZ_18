//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан по шаблону.
//
//     Изменения, вносимые в этот файл вручную, могут привести к непредвиденной работе приложения.
//     Изменения, вносимые в этот файл вручную, будут перезаписаны при повторном создании кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Data_BusinessLogic
{
    using Data_BusinessLogic.Model.DB.Interface;
    using System;
    using System.Collections.Generic;
    using System.ComponentModel;
    using System.ComponentModel.DataAnnotations;
    using System.Text.Json.Serialization;

    public partial class RepairParts : IRepairParts, INotifyPropertyChanged
    {
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
        public RepairParts()
        {
            this.Requests = new HashSet<Requests>();
        }

        public event PropertyChangedEventHandler PropertyChanged;

        public int SparePartID { get; private set; }

        private string partName;
        [Required]
        [MaxLength(100)]
        public string PartName
        {
            get => partName;
            set
            {
                partName = value;
                OnPropertyChanged(nameof(PartName));
            }
        }

        private decimal price;
        [Required]
        [Range(0, double.MaxValue, ErrorMessage = "Price must be a positive value")]
        public decimal Price
        {
            get => price;
            set
            {
                price = value;
                OnPropertyChanged(nameof(Price));
            }
        }

        private int stockQuantity;
        [Required]
        [Range(0, int.MaxValue, ErrorMessage = "Stock quantity must be a non-negative value")]
        public int StockQuantity
        {
            get => stockQuantity;
            set
            {
                stockQuantity = value;
                OnPropertyChanged(nameof(StockQuantity));
            }
        }

        protected void OnPropertyChanged(string propertyName)
        {
            PropertyChanged?.Invoke(this, new PropertyChangedEventArgs(propertyName));
        }

        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<Requests> Requests { get; set; }
    }
}
