//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан по шаблону.
//
//     Изменения, вносимые в этот файл вручную, могут привести к непредвиденной работе приложения.
//     Изменения, вносимые в этот файл вручную, будут перезаписаны при повторном создании кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Data_BusinessLogic
{
    using Data_BusinessLogic.Model.DB.Interface;
    using System;
    using System.Collections.Generic;   
    using System.ComponentModel;
    using System.ComponentModel.DataAnnotations;
    using System.Text.Json.Serialization;

    public partial class Requests : IRequests, INotifyPropertyChanged
    {
        public event PropertyChangedEventHandler PropertyChanged;

        public int RequestID { get; private set; }

        private DateTime startDate;
        [Required]
        [JsonPropertyName("startDate")]
        public DateTime StartDate
        {
            get => startDate;
            set
            {
                startDate = value;
                OnPropertyChanged(nameof(StartDate));
            }
        }

        private DateTime? completionDate;
        [JsonPropertyName("completionDate")]
        public DateTime? CompletionDate
        {
            get => completionDate;
            set
            {
                completionDate = value;
                OnPropertyChanged(nameof(CompletionDate));
            }
        }

        private string typeOfRequest;
        [Required]
        [MaxLength(50)]
        [JsonPropertyName("typeOfRequest")]
        public string TypeOfRequest
        {
            get => typeOfRequest;
            set
            {
                typeOfRequest = value;
                OnPropertyChanged(nameof(TypeOfRequest));
            }
        }

        private string technicType;
        [Required]
        [MaxLength(100)]
        [JsonPropertyName("technicType")]
        public string TechnicType
        {
            get => technicType;
            set
            {
                technicType = value;
                OnPropertyChanged(nameof(TechnicType));
            }
        }

        private string technicModel;
        [Required]
        [MaxLength(100)]
        [JsonPropertyName("technicModel")]
        public string TechnicModel
        {
            get => technicModel;
            set
            {
                technicModel = value;
                OnPropertyChanged(nameof(TechnicModel));
            }
        }

        private string problemDescription;
        [Required]
        [MaxLength(2048)]
        [JsonPropertyName("problemDescription")]
        public string ProblemDescription
        {
            get => problemDescription;
            set
            {
                problemDescription = value;
                OnPropertyChanged(nameof(ProblemDescription));
            }
        }

        private string cStatus;
        [Required]
        [MaxLength(50)]
        [JsonPropertyName("status")]
        public string C_Status
        {
            get => cStatus;
            set
            {
                cStatus = value;
                OnPropertyChanged(nameof(C_Status));
            }
        }

        private int? sparePartID;
        [JsonPropertyName("sparePartId")]
        public int? SparePartID
        {
            get => sparePartID;
            set
            {
                sparePartID = value;
                OnPropertyChanged(nameof(SparePartID));
            }
        }

        private int customerID;
        [Required]
        [JsonPropertyName("customerId")]
        public int CustomerID
        {
            get => customerID;
            set
            {
                customerID = value;
                OnPropertyChanged(nameof(CustomerID));
            }
        }

        private int masterID;
        [Required]
        [JsonPropertyName("masterId")]
        public int MasterID
        {
            get => masterID;
            set
            {
                masterID = value;
                OnPropertyChanged(nameof(MasterID));
            }
        }

        private int managerID;
        [Required]
        [JsonPropertyName("managerId")]
        public int ManagerID
        {
            get => managerID;
            set
            {
                managerID = value;
                OnPropertyChanged(nameof(ManagerID));
            }
        }

        protected void OnPropertyChanged(string propertyName)
        {
            PropertyChanged?.Invoke(this, new PropertyChangedEventArgs(propertyName));
        }

        public virtual Customers Customers { get; set; }
        public virtual Managers Managers { get; set; }
        public virtual Masters Masters { get; set; }
        public virtual RepairParts RepairParts { get; set; }
    }
}
